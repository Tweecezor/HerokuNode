{"ast":null,"code":"var _jsxFileName = \"/Users/tweecezor/Desktop/nodeJS/src/components/common/ButtonLink.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nconst AdapterLink = React.forwardRef((props, ref) => React.createElement(Link, Object.assign({\n  innerRef: ref\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n})));\nconst ButtonLink = withRouter(({\n  path,\n  location,\n  children,\n  isRouterLink,\n  color = 'primary'\n}) => React.createElement(Button, {\n  color: isRouterLink ? location.pathname === path ? color : 'default' : color,\n  component: AdapterLink,\n  to: path,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, children));\nexport default ButtonLink;","map":{"version":3,"sources":["/Users/tweecezor/Desktop/nodeJS/src/components/common/ButtonLink.jsx"],"names":["React","Link","withRouter","Button","AdapterLink","forwardRef","props","ref","ButtonLink","path","location","children","isRouterLink","color","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KACnC,oBAAC,IAAD;AAAM,EAAA,QAAQ,EAAEA;AAAhB,GAAyBD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADkB,CAApB;AAIA,MAAME,UAAU,GAAGN,UAAU,CAC3B,CAAC;AAAEO,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,YAA5B;AAA0CC,EAAAA,KAAK,GAAG;AAAlD,CAAD,KACE,oBAAC,MAAD;AACE,EAAA,KAAK,EACHD,YAAY,GAAIF,QAAQ,CAACI,QAAT,KAAsBL,IAAtB,GAA6BI,KAA7B,GAAqC,SAAzC,GAAsDA,KAFtE;AAIE,EAAA,SAAS,EAAET,WAJb;AAKE,EAAA,EAAE,EAAEK,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOGE,QAPH,CAFyB,CAA7B;AAcA,eAAeH,UAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\nconst AdapterLink = React.forwardRef((props, ref) => (\n  <Link innerRef={ref} {...props} />\n));\n\nconst ButtonLink = withRouter(\n  ({ path, location, children, isRouterLink, color = 'primary' }) => (\n    <Button\n      color={\n        isRouterLink ? (location.pathname === path ? color : 'default') : color\n      }\n      component={AdapterLink}\n      to={path}\n    >\n      {children}\n    </Button>\n  )\n);\n\nexport default ButtonLink;\n"]},"metadata":{},"sourceType":"module"}