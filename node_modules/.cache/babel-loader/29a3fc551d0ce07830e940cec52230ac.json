{"ast":null,"code":"var _jsxFileName = \"/Users/tweecezor/Desktop/nodeJS/src/components/common/PrivateRoute.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport _ from 'lodash';\nimport { userPermissionsSelector, isAuthorizedSelector } from '../../store/auth';\nimport routes from '../../constants/routes';\n\nconst PrivateRoute = ({\n  permissionPath,\n  path,\n  component,\n  permissions,\n  isAuthorized\n}) => {\n  if (!isAuthorized || permissionPath && !_.get(permissions, [permissionPath, 'R'], false)) return React.createElement(Redirect, {\n    from: path,\n    to: routes.home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n  return React.createElement(Route, {\n    path: path,\n    component: component,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n};\n\nexport default connect(state => ({\n  permissions: userPermissionsSelector(state),\n  isAuthorized: isAuthorizedSelector(state)\n}))(PrivateRoute);","map":{"version":3,"sources":["/Users/tweecezor/Desktop/nodeJS/src/components/common/PrivateRoute.jsx"],"names":["React","connect","Route","Redirect","_","userPermissionsSelector","isAuthorizedSelector","routes","PrivateRoute","permissionPath","path","component","permissions","isAuthorized","get","home","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SACEC,uBADF,EAEEC,oBAFF,QAGO,kBAHP;AAIA,OAAOC,MAAP,MAAmB,wBAAnB;;AACA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,cADoB;AAEpBC,EAAAA,IAFoB;AAGpBC,EAAAA,SAHoB;AAIpBC,EAAAA,WAJoB;AAKpBC,EAAAA;AALoB,CAAD,KAMf;AACJ,MAAI,CAACA,YAAD,IAAkBJ,cAAc,IAAI,CAACL,CAAC,CAACU,GAAF,CAAMF,WAAN,EAAmB,CAACH,cAAD,EAAiB,GAAjB,CAAnB,EAA0C,KAA1C,CAAzC,EACE,OAAO,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,IAAhB;AAAsB,IAAA,EAAE,EAAEH,MAAM,CAACQ,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEF,SAAO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEL,IAAb;AAAmB,IAAA,SAAS,EAAEC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAXD;;AAaA,eAAeV,OAAO,CAACe,KAAK,KAAK;AAC/BJ,EAAAA,WAAW,EAAEP,uBAAuB,CAACW,KAAD,CADL;AAE/BH,EAAAA,YAAY,EAAEP,oBAAoB,CAACU,KAAD;AAFH,CAAL,CAAN,CAAP,CAGXR,YAHW,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport _ from 'lodash';\nimport {\n  userPermissionsSelector,\n  isAuthorizedSelector\n} from '../../store/auth';\nimport routes from '../../constants/routes';\nconst PrivateRoute = ({\n  permissionPath,\n  path,\n  component,\n  permissions,\n  isAuthorized\n}) => {\n  if (!isAuthorized || (permissionPath && !_.get(permissions, [permissionPath, 'R'], false)))\n    return <Redirect from={path} to={routes.home} />;\n\n  return <Route path={path} component={component} />;\n};\n\nexport default connect(state => ({\n  permissions: userPermissionsSelector(state),\n  isAuthorized: isAuthorizedSelector(state)\n}))(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}