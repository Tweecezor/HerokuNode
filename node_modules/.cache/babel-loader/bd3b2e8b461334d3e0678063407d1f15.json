{"ast":null,"code":"var _jsxFileName = \"/Users/tweecezor/Desktop/nodeJS/src/components/App/AppHeader.jsx\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { AppBar, Toolbar, Container } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport ButtonLink from '../common/ButtonLink';\nimport routes from '../../constants/routes';\nimport { userPermissionsSelector, isAuthorizedSelector, userProfileSelector } from '../../store/auth';\nimport _get from 'lodash.get';\n\nconst styles = () => ({\n  logo: {\n    flexGrow: 1\n  }\n});\n\nclass AppHeader extends PureComponent {\n  renderAuthorizedNav() {\n    const _this$props = this.props,\n          permissions = _this$props.permissions,\n          profile = _this$props.profile;\n    return React.createElement(React.Fragment, null, _get(permissions, 'news.R', false) && React.createElement(ButtonLink, {\n      path: routes.news,\n      isRouterLink: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), _get(permissions, 'chat.R', false) && React.createElement(ButtonLink, {\n      path: routes.chat,\n      isRouterLink: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"\\u0427\\u0430\\u0442\"), _get(permissions, 'settings.R', false) && React.createElement(ButtonLink, {\n      path: routes.adminPanel,\n      isRouterLink: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\u0410\\u0434\\u043C\\u0438\\u043D\\u043A\\u0430\"), React.createElement(ButtonLink, {\n      path: routes.profile,\n      isRouterLink: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, profile ? profile.username : ''));\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          classes = _this$props2.classes,\n          isAuthorized = _this$props2.isAuthorized;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      position: \"static\",\n      color: \"default\",\n      className: classes.appBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"../../assets/img/logo.png\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(ButtonLink, {\n      path: routes.home,\n      isRouterLink: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"), isAuthorized ? this.renderAuthorizedNav() : null))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthorized: isAuthorizedSelector(state),\n  permissions: userPermissionsSelector(state),\n  profile: userProfileSelector(state)\n});\n\nexport default compose(withStyles(styles), connect(mapStateToProps))(AppHeader);","map":{"version":3,"sources":["/Users/tweecezor/Desktop/nodeJS/src/components/App/AppHeader.jsx"],"names":["React","PureComponent","connect","compose","AppBar","Toolbar","Container","withStyles","ButtonLink","routes","userPermissionsSelector","isAuthorizedSelector","userProfileSelector","_get","styles","logo","flexGrow","AppHeader","renderAuthorizedNav","props","permissions","profile","news","chat","adminPanel","username","render","classes","isAuthorized","appBar","home","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { AppBar, Toolbar, Container  } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport ButtonLink from '../common/ButtonLink';\nimport routes from '../../constants/routes'\nimport {\n  userPermissionsSelector,\n  isAuthorizedSelector,\n  userProfileSelector\n} from '../../store/auth';\nimport _get from 'lodash.get'\n\nconst styles = () => ({\n  logo: {\n    flexGrow: 1\n  }\n});\n\nclass AppHeader extends PureComponent {\n  renderAuthorizedNav() {\n    const { permissions, profile } = this.props;\n    return (\n      <>\n        {_get(permissions, 'news.R', false) && (\n          <ButtonLink path={routes.news} isRouterLink>\n            Новости\n          </ButtonLink>\n        )}\n        {_get(permissions, 'chat.R', false) && (\n          <ButtonLink path={routes.chat} isRouterLink>\n            Чат\n          </ButtonLink>\n        )}\n\n        {_get(permissions, 'settings.R', false) && (\n          <ButtonLink path={routes.adminPanel} isRouterLink>\n            Админка\n          </ButtonLink>\n        )}\n        <ButtonLink path={routes.profile} isRouterLink>\n        { profile ? profile.username : '' }\n        </ButtonLink>\n      </>\n    );\n  }\n  render() {\n    const { classes, isAuthorized } = this.props;\n    return (\n      <div>\n        <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n          <Container>\n            <Toolbar>\n              <div className={classes.logo}>\n                <img src=\"../../assets/img/logo.png\" alt=\"logo\" />\n              </div>\n              <ButtonLink path={routes.home} isRouterLink>\n                Главная\n              </ButtonLink>\n              {isAuthorized ? this.renderAuthorizedNav() : null}\n            </Toolbar>\n          </Container>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthorized: isAuthorizedSelector(state),\n  permissions: userPermissionsSelector(state),\n  profile: userProfileSelector(state)\n});\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps)\n)(AppHeader);\n"]},"metadata":{},"sourceType":"module"}