{"ast":null,"code":"var _jsxFileName = \"/Users/tweecezor/Desktop/nodeJS/src/components/Chat/ChatActiveChatArea.jsx\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Card, CardContent, CardActions, TextField, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport classNames from 'classnames';\nimport _get from 'lodash.get';\nimport { sendMessage, setMessageText, chatMessageText } from '../../store/chat';\nimport { compose } from 'recompose';\nimport { userProfileSelector, userPermissionsSelector } from '../../store/auth';\n\nconst styles = theme => ({\n  messageContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  message: {\n    padding: theme.spacing(1)\n  },\n  messagePrimary: {\n    backgroundColor: theme.palette.grey.A700\n  },\n  messageSecondary: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  isMyMessage: {\n    alignSelf: 'end'\n  },\n  isAnotherMessage: {\n    alignSelf: 'flex-end'\n  },\n  chatArea: {\n    height: '100%',\n    overflowY: 'scroll'\n  },\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  }\n});\n\nclass ActiveChannelArea extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      const dispatch = this.props.dispatch;\n      dispatch(setMessageText(event.target.value));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const dispatch = this.props.dispatch;\n      dispatch(sendMessage());\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          messages = _this$props.messages,\n          messageText = _this$props.messageText,\n          userId = _this$props.userId,\n          permission = _this$props.permission;\n    const isCreateAllowed = !!_get(permission, 'chat.C', false);\n    return React.createElement(React.Fragment, null, React.createElement(CardContent, {\n      className: classes.chatArea,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      wrap: \"nowrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, messages.map((message, i) => React.createElement(Grid, {\n      item: true,\n      key: i,\n      className: classNames(classes.messageContainer, message.senderId !== userId ? classes.isMyMessage : classes.isAnotherMessage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classNames(classes.message, message.senderId !== userId ? classes.messagePrimary : classes.messageSecondary),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, message.text))))), isCreateAllowed && React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Label\",\n      style: {\n        margin: 8\n      },\n      fullWidth: true,\n      margin: \"normal\",\n      variant: \"filled\",\n      InputLabelProps: {\n        shrink: true\n      },\n      value: messageText,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messageText: chatMessageText(state),\n  userId: userProfileSelector(state).id,\n  permission: userPermissionsSelector(state)\n});\n\nexport default compose(withStyles(styles), connect(mapStateToProps))(ActiveChannelArea);","map":{"version":3,"sources":["/Users/tweecezor/Desktop/nodeJS/src/components/Chat/ChatActiveChatArea.jsx"],"names":["React","PureComponent","connect","Grid","Card","CardContent","CardActions","TextField","Button","withStyles","classNames","_get","sendMessage","setMessageText","chatMessageText","compose","userProfileSelector","userPermissionsSelector","styles","theme","messageContainer","marginBottom","spacing","message","padding","messagePrimary","backgroundColor","palette","grey","A700","messageSecondary","secondary","main","isMyMessage","alignSelf","isAnotherMessage","chatArea","height","overflowY","form","display","alignItems","width","ActiveChannelArea","handleChange","event","dispatch","props","target","value","handleSubmit","preventDefault","render","classes","messages","messageText","userId","permission","isCreateAllowed","map","i","senderId","text","margin","shrink","mapStateToProps","state","id"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Card, CardContent, CardActions, TextField, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport classNames from 'classnames';\nimport _get from 'lodash.get';\nimport { sendMessage, setMessageText, chatMessageText } from '../../store/chat';\nimport { compose } from 'recompose';\nimport { userProfileSelector, userPermissionsSelector } from '../../store/auth';\nconst styles = theme => ({\n  messageContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  message: {\n    padding: theme.spacing(1)\n  },\n  messagePrimary: {\n    backgroundColor: theme.palette.grey.A700\n  },\n  messageSecondary: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  isMyMessage: {\n    alignSelf: 'end'\n  },\n  isAnotherMessage: {\n    alignSelf: 'flex-end'\n  },\n  chatArea: {\n    height: '100%',\n    overflowY: 'scroll'\n  },\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  }\n});\n\nclass ActiveChannelArea extends PureComponent {\n  handleChange = event => {\n    const { dispatch } = this.props;\n    dispatch(setMessageText(event.target.value));\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    dispatch(sendMessage());\n  };\n  render() {\n    const { classes, messages, messageText, userId, permission } = this.props;\n    const isCreateAllowed = !!_get(permission, 'chat.C', false);\n    return (\n      <>\n        <CardContent className={classes.chatArea}>\n          <Grid container direction=\"column\" wrap=\"nowrap\">\n            {messages.map((message, i) => (\n              <Grid\n                item\n                key={i}\n                className={classNames(\n                  classes.messageContainer,\n                  message.senderId !== userId ? classes.isMyMessage : classes.isAnotherMessage\n                )}\n              >\n                <Card\n                  className={classNames(\n                    classes.message,\n                    message.senderId !== userId ? classes.messagePrimary : classes.messageSecondary\n                  )}\n                >\n                  {message.text}\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </CardContent>\n        {isCreateAllowed && (\n          <CardActions>\n            <form onSubmit={this.handleSubmit} className={classes.form}>\n              <TextField\n                label=\"Label\"\n                style={{ margin: 8 }}\n                fullWidth\n                margin=\"normal\"\n                variant=\"filled\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n                value={messageText}\n                onChange={this.handleChange}\n              />\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Отправить\n              </Button>\n            </form>\n          </CardActions>\n        )}\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  messageText: chatMessageText(state),\n  userId: userProfileSelector(state).id,\n  permission: userPermissionsSelector(state)\n});\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps)\n)(ActiveChannelArea);\n"]},"metadata":{},"sourceType":"module"}