{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { combineReducers } from 'redux';\nimport request from '../../helpers/request';\nimport _get from 'lodash.get';\nimport { openNotification } from '../notifications';\nimport { userProfileSelector, getUserProfileFromToken } from '../auth';\nexport const isLoadingUsersSelector = state => state.adminPanel.isLoadingUsers;\nexport const usersSelector = state => state.adminPanel.users;\nconst actionsPrefix = 'ADMIN_PANEL';\nexport const setIsLoadingUsers = createAction(\"\".concat(actionsPrefix, \"/SET_IS_LOADING_USERS\"));\nexport const setIsLoadingForm = createAction(\"\".concat(actionsPrefix, \"/SET_IS_LOADING_FORM\"));\nexport const setUsers = createAction(\"\".concat(actionsPrefix, \"/SET_USERS\"));\nexport const setToZeroUsers = createAction(\"\".concat(actionsPrefix, \"/SET_TO_ZERO_USERS\"));\nconst isLoadingUsers = handleActions({\n  [setIsLoadingUsers]: (_, action) => action.payload\n}, false);\nconst isLoadingForm = handleActions({\n  [setIsLoadingForm]: (_, action) => action.payload\n}, false);\nconst users = handleActions({\n  [setUsers]: (_, action) => action.payload,\n  [setToZeroUsers]: () => []\n}, []);\nexport default combineReducers({\n  isLoadingUsers,\n  isLoadingForm,\n  users\n});\nexport const getUsers = () => (dispatch, getState) => {\n  dispatch(setIsLoadingUsers(true));\n  request({\n    url: '/users',\n    getState,\n    dispatch\n  }).then(data => {\n    dispatch(setUsers(data));\n  }).catch(error => openNotification({\n    text: error.message,\n    variant: 'error'\n  })).finally(() => dispatch(setIsLoadingUsers(false)));\n};\nexport const updateUserPermission = (userId, permission) => (dispatch, getState) => new Promise(resolve => {\n  dispatch(setIsLoadingForm(true));\n  request({\n    url: \"/users/\".concat(userId, \"/permission\"),\n    method: 'PATCH',\n    data: {\n      permission\n    },\n    getState,\n    dispatch\n  }).then(() => {\n    openNotification({\n      text: 'Успешно!',\n      variant: 'success'\n    });\n    dispatch(getUsers());\n    const isSelf = _get(userProfileSelector(getState()), 'id', null) === userId;\n    isSelf && dispatch(getUserProfileFromToken());\n    resolve(true);\n  }).catch(error => {\n    openNotification({\n      text: error.message,\n      variant: 'error'\n    });\n  }).finally(() => dispatch(setIsLoadingForm(false)));\n});\nexport const deleteUser = userId => (dispatch, getState) => new Promise(resolve => {\n  dispatch(setIsLoadingForm(true));\n  request({\n    url: \"/users/\".concat(userId),\n    method: 'DELETE',\n    getState,\n    dispatch\n  }).then(data => {\n    dispatch(getUsers(data));\n    resolve(true);\n  }).catch(error => {\n    openNotification({\n      text: error.message,\n      variant: 'error'\n    });\n  }).finally(() => dispatch(setIsLoadingForm(false)));\n});","map":{"version":3,"sources":["/Users/tweecezor/Desktop/nodeJS/src/store/adminPanel/index.js"],"names":["createAction","handleActions","combineReducers","request","_get","openNotification","userProfileSelector","getUserProfileFromToken","isLoadingUsersSelector","state","adminPanel","isLoadingUsers","usersSelector","users","actionsPrefix","setIsLoadingUsers","setIsLoadingForm","setUsers","setToZeroUsers","_","action","payload","isLoadingForm","getUsers","dispatch","getState","url","then","data","catch","error","text","message","variant","finally","updateUserPermission","userId","permission","Promise","resolve","method","isSelf","deleteUser"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport { combineReducers } from 'redux';\nimport request from '../../helpers/request';\nimport _get from 'lodash.get'\nimport { openNotification } from '../notifications';\nimport { userProfileSelector, getUserProfileFromToken } from '../auth'\n\nexport const isLoadingUsersSelector = state => state.adminPanel.isLoadingUsers;\nexport const usersSelector = state => state.adminPanel.users;\n\nconst actionsPrefix = 'ADMIN_PANEL';\nexport const setIsLoadingUsers = createAction(`${actionsPrefix}/SET_IS_LOADING_USERS`);\nexport const setIsLoadingForm = createAction(`${actionsPrefix}/SET_IS_LOADING_FORM`);\nexport const setUsers = createAction(`${actionsPrefix}/SET_USERS`);\nexport const setToZeroUsers = createAction(`${actionsPrefix}/SET_TO_ZERO_USERS`);\n\nconst isLoadingUsers = handleActions(\n  {\n    [setIsLoadingUsers]: (_, action) => action.payload\n  },\n  false\n);\n\nconst isLoadingForm = handleActions({ [setIsLoadingForm]: (_, action) => action.payload }, false);\n\nconst users = handleActions(\n  {\n    [setUsers]: (_, action) => action.payload,\n    [setToZeroUsers]: () => []\n  },\n  []\n);\n\nexport default combineReducers({\n  isLoadingUsers,\n  isLoadingForm,\n  users\n});\n\nexport const getUsers = () => (dispatch, getState) => {\n  dispatch(setIsLoadingUsers(true));\n  request({ url: '/users', getState, dispatch })\n    .then(data => {\n      dispatch(setUsers(data));\n    })\n    .catch(error =>\n      openNotification({\n        text: error.message,\n        variant: 'error'\n      })\n    )\n    .finally(() => dispatch(setIsLoadingUsers(false)));\n};\n\nexport const updateUserPermission = (userId, permission) => (dispatch, getState) => new Promise((resolve) => {\n  dispatch(setIsLoadingForm(true));\n  request({\n    url: `/users/${userId}/permission`,\n    method: 'PATCH',\n    data: { permission },\n    getState,\n    dispatch\n  })\n    .then(() => {\n      openNotification({ text: 'Успешно!', variant: 'success' });\n      dispatch(getUsers());\n      const isSelf = _get(userProfileSelector(getState()), 'id', null) === userId;\n      isSelf && dispatch(getUserProfileFromToken())\n      resolve(true)\n    })\n    .catch(error => {\n      openNotification({\n        text: error.message,\n        variant: 'error'\n      })\n    })\n    .finally(() => dispatch(setIsLoadingForm(false)))\n});\n\n\nexport const deleteUser = userId => (dispatch, getState) => new Promise((resolve) => {\n  dispatch(setIsLoadingForm(true));\n  request({ url: `/users/${userId}`, method: 'DELETE', getState, dispatch })\n    .then(data => {\n      dispatch(getUsers(data));\n      resolve(true)\n    })\n    .catch(error => {\n      openNotification({\n        text: error.message,\n        variant: 'error'\n      })\n    })\n    .finally(() => dispatch(setIsLoadingForm(false)));\n});"]},"metadata":{},"sourceType":"module"}