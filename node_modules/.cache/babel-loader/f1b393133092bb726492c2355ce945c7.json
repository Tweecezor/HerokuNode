{"ast":null,"code":"var _jsxFileName = \"/Users/tweecezor/Desktop/nodeJS/src/components/Chat/Chat.jsx\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { connectSocket, disconnectSocket, chatUsersSelector, chatSelectedRoomSelector, chatMessagesList } from '../../store/chat';\nimport { Grid, Container, Card } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport ChatChannelsList from './ChatChannelList';\nimport ChatActiveChatArea from './ChatActiveChatArea';\nimport { compose } from 'recompose';\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  column: {\n    // backgroundColor: '#494949',\n    height: 'calc(100vh - 80px)',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  wrapper: {\n    width: '100%',\n    flex: '1 1 100%',\n    paddingTop: theme.spacing(1)\n  },\n  empty: {\n    padding: theme.spacing(3)\n  }\n});\n\nclass Chat extends PureComponent {\n  componentDidMount() {\n    const dispatch = this.props.dispatch;\n    dispatch(connectSocket());\n  }\n\n  componentWillUnmount() {\n    const dispatch = this.props.dispatch;\n    dispatch(disconnectSocket());\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          users = _this$props.users,\n          messages = _this$props.messages,\n          selectedRoom = _this$props.selectedRoom;\n    return React.createElement(\"div\", {\n      className: classes.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ChatChannelsList, {\n      users: users,\n      selected: selectedRoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.column,\n      square: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, selectedRoom ? React.createElement(ChatActiveChatArea, {\n      messages: messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: classes.empty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0447\\u0430\\u0442\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: chatUsersSelector(state),\n  selectedRoom: chatSelectedRoomSelector(state),\n  messages: chatMessagesList(state)\n});\n\nexport default compose(withStyles(styles), connect(mapStateToProps))(Chat);","map":{"version":3,"sources":["/Users/tweecezor/Desktop/nodeJS/src/components/Chat/Chat.jsx"],"names":["React","PureComponent","connect","connectSocket","disconnectSocket","chatUsersSelector","chatSelectedRoomSelector","chatMessagesList","Grid","Container","Card","withStyles","ChatChannelsList","ChatActiveChatArea","compose","styles","theme","toolbar","mixins","column","height","display","flexDirection","wrapper","width","flex","paddingTop","spacing","empty","padding","Chat","componentDidMount","dispatch","props","componentWillUnmount","render","classes","users","messages","selectedRoom","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux'\nimport { connectSocket, disconnectSocket, chatUsersSelector, chatSelectedRoomSelector, chatMessagesList } from '../../store/chat'\nimport {\n  Grid,\n  Container,\n  Card\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport ChatChannelsList from './ChatChannelList'\nimport ChatActiveChatArea from './ChatActiveChatArea'\nimport { compose } from 'recompose';\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  column: {\n    // backgroundColor: '#494949',\n    height: 'calc(100vh - 80px)',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  wrapper: {\n    width: '100%',\n    flex: '1 1 100%',\n    paddingTop: theme.spacing(1)\n  },\n  empty: {\n    padding: theme.spacing(3)\n  }\n});\n\nclass Chat extends PureComponent {\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(connectSocket())\n  }\n\n  componentWillUnmount () {\n    const { dispatch } = this.props;\n    dispatch(disconnectSocket())\n  }\n  render() {\n    const { classes, users, messages, selectedRoom } = this.props;\n    return (\n      <div className={classes.wrapper}>\n        <Container>\n          <Grid container spacing={1}>\n            <Grid item xs={4}>\n              <ChatChannelsList users={users} selected={selectedRoom} />\n            </Grid>\n            <Grid item xs={8}>\n              <Card className={classes.column} square>\n                { selectedRoom ? <ChatActiveChatArea messages={messages} /> : <div className={classes.empty}>Выберите чат</div> }\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: chatUsersSelector(state),\n  selectedRoom: chatSelectedRoomSelector(state),\n  messages: chatMessagesList(state)\n})\nexport default compose(withStyles(styles), connect(mapStateToProps))(Chat);\n"]},"metadata":{},"sourceType":"module"}