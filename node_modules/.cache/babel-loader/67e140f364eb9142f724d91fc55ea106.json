{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst CUSTOM_PROPERTY_NAME = '--aspect-ratio';\n\nclass AspectRatio extends _react.Component {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"node\", null);\n\n    _defineProperty(this, \"setNode\", node => {\n      this.node = node;\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.node) {\n      const node = this.node; // BC for older version of React https://github.com/facebook/react/issues/6411\n      // check if React support custom property AFTER\n\n      const customPropertyValue = node.style.getPropertyValue(CUSTOM_PROPERTY_NAME);\n\n      if (!customPropertyValue) {\n        node.style.setProperty(CUSTOM_PROPERTY_NAME, \"(\".concat(this.props.ratio, \")\"));\n      }\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          ratio = _this$props.ratio,\n          style = _this$props.style,\n          children = _this$props.children,\n          otherProps = _objectWithoutPropertiesLoose(_this$props, [\"ratio\", \"style\", \"children\"]); // eslint-disable-line no-unused-vars\n\n\n    const newStyle = _extends({}, style, {\n      // https://github.com/roderickhsiao/react-aspect-ratio/commit/53ec15858ae186c41e70b8c14cc5a5b6e97cb6e3\n      [CUSTOM_PROPERTY_NAME]: \"(\".concat(ratio, \")\")\n    });\n\n    return _react.default.createElement(\"div\", _extends({\n      ref: this.setNode,\n      style: newStyle\n    }, otherProps), children);\n  }\n\n}\n\n_defineProperty(AspectRatio, \"defaultProps\", {\n  className: 'react-aspect-ratio-placeholder',\n  ratio: 1\n});\n\nvar _default = AspectRatio;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}