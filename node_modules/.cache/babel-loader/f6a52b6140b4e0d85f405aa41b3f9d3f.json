{"ast":null,"code":"var _jsxFileName = \"/Users/tweecezor/Desktop/nodeJS/src/components/News/NewsAdd.jsx\";\nimport React, { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { isLoadingNewsFormSelector, createNews, updateNews, newsListSelector } from '../../store/news';\nimport { withStyles } from '@material-ui/styles';\nimport { Paper, Grid, TextField, ButtonGroup, Button } from '@material-ui/core';\nimport ButtonLink from '../common/ButtonLink';\nimport routes from '../../constants/routes';\n\nconst styles = theme => ({\n  formCard: {\n    padding: theme.spacing(2)\n  },\n  textField: {\n    display: 'block',\n    width: '100%'\n  }\n});\n\nclass NewsAdd extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      text: '',\n      createdAt: new Date(),\n      user: ''\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            title = _this$state.title,\n            text = _this$state.text;\n      const _this$props = this.props,\n            history = _this$props.history,\n            dispatch = _this$props.dispatch,\n            match = _this$props.match;\n      dispatch(match.params.id ? updateNews({\n        title,\n        text,\n        id: match.params.id\n      }) : createNews({\n        title,\n        text\n      })).then(() => history.push(routes.news));\n    };\n  }\n\n  componentDidMount() {\n    const _this$props2 = this.props,\n          match = _this$props2.match,\n          newsList = _this$props2.newsList;\n\n    if (match.params.id) {\n      const _newsList$find = newsList.find(news => news.id === match.params.id),\n            title = _newsList$find.title,\n            text = _newsList$find.text,\n            created_at = _newsList$find.created_at,\n            user = _newsList$find.user;\n\n      this.setState({\n        title,\n        text,\n        createdAt: created_at,\n        user: user.username\n      });\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          title = _this$state2.title,\n          text = _this$state2.text,\n          createdAt = _this$state2.createdAt,\n          user = _this$state2.user;\n    return React.createElement(Paper, {\n      className: classes.formCard,\n      component: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"\\u0410\\u0432\\u0442\\u043E\\u0440\",\n      value: user,\n      onChange: this.handleChange,\n      className: classes.textField,\n      margin: \"normal\",\n      disabled: true,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      label: \"\\u0414\\u0430\\u0442\\u0430\",\n      value: createdAt,\n      onChange: this.handleChange,\n      className: classes.textField,\n      margin: \"normal\",\n      disabled: true,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      label: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\",\n      name: \"title\",\n      value: title,\n      onChange: this.handleChange,\n      className: classes.textField,\n      margin: \"normal\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"\\u0422\\u0435\\u043A\\u0441\\u0442\",\n      name: \"text\",\n      value: text,\n      onChange: this.handleChange,\n      className: classes.textField,\n      margin: \"normal\",\n      multiline: true,\n      fullWidth: true,\n      rows: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), React.createElement(ButtonLink, {\n      path: \"/news\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoading: isLoadingNewsFormSelector(state),\n  newsList: newsListSelector(state)\n});\n\nexport default compose(withStyles(styles), withRouter, connect(mapStateToProps, null))(NewsAdd);","map":{"version":3,"sources":["/Users/tweecezor/Desktop/nodeJS/src/components/News/NewsAdd.jsx"],"names":["React","PureComponent","withRouter","connect","compose","isLoadingNewsFormSelector","createNews","updateNews","newsListSelector","withStyles","Paper","Grid","TextField","ButtonGroup","Button","ButtonLink","routes","styles","theme","formCard","padding","spacing","textField","display","width","NewsAdd","state","title","text","createdAt","Date","user","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","props","history","dispatch","match","params","id","then","push","news","componentDidMount","newsList","find","created_at","username","render","classes","mapStateToProps","isLoading"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { isLoadingNewsFormSelector, createNews, updateNews, newsListSelector } from '../../store/news';\nimport { withStyles } from '@material-ui/styles';\nimport { Paper, Grid, TextField, ButtonGroup, Button } from '@material-ui/core';\nimport ButtonLink from '../common/ButtonLink';\nimport routes from '../../constants/routes';\n\nconst styles = theme => ({\n  formCard: {\n    padding: theme.spacing(2)\n  },\n  textField: {\n    display: 'block',\n    width: '100%'\n  }\n});\n\nclass NewsAdd extends PureComponent {\n  state = {\n    title: '',\n    text: '',\n    createdAt: new Date(),\n    user: ''\n  };\n  componentDidMount() {\n    const { match, newsList } = this.props;\n    if (match.params.id) {\n      const { title, text, created_at, user } = newsList.find(news => news.id === match.params.id)\n      this.setState({\n        title,\n        text,\n        createdAt: created_at,\n        user: user.username\n      })\n    }\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { title, text } = this.state;\n    const { history, dispatch, match } = this.props;\n    dispatch(match.params.id ? updateNews({ title, text, id: match.params.id }) : createNews({ title, text })).then(() => history.push(routes.news));\n  };\n  render() {\n    const { classes } = this.props;\n    const { title, text, createdAt, user } = this.state;\n    return (\n      <Paper\n        className={classes.formCard}\n        component=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <TextField\n              label=\"Автор\"\n              value={user}\n              onChange={this.handleChange}\n              className={classes.textField}\n              margin=\"normal\"\n              disabled\n              fullWidth\n            />\n            <TextField\n              label=\"Дата\"\n              value={createdAt}\n              onChange={this.handleChange}\n              className={classes.textField}\n              margin=\"normal\"\n              disabled\n              fullWidth\n            />\n            <TextField\n              label=\"Заголовок\"\n              name=\"title\"\n              value={title}\n              onChange={this.handleChange}\n              className={classes.textField}\n              margin=\"normal\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={8}>\n            <TextField\n              label=\"Текст\"\n              name=\"text\"\n              value={text}\n              onChange={this.handleChange}\n              className={classes.textField}\n              margin=\"normal\"\n              multiline\n              fullWidth\n              rows={5}\n            />\n            <ButtonGroup>\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                Сохранить\n              </Button>\n              <ButtonLink path=\"/news\" variant=\"contained\">\n                Отменить\n              </ButtonLink>\n            </ButtonGroup>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isLoading: isLoadingNewsFormSelector(state),\n  newsList: newsListSelector(state)\n});\nexport default compose(\n  withStyles(styles),\n  withRouter,\n  connect(\n    mapStateToProps,\n    null\n  )\n)(NewsAdd);\n"]},"metadata":{},"sourceType":"module"}