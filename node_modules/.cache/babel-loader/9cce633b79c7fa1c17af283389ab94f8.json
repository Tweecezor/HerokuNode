{"ast":null,"code":"import _slicedToArray from \"/Users/tweecezor/Desktop/nodeJS/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tweecezor/Desktop/nodeJS/src/components/common/PasswordInput.jsx\";\nimport React from 'react';\nimport { FormControl, Input, InputLabel, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff, Https } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n  textField: {\n    display: 200,\n    marginBottom: theme.spacing(3)\n  }\n});\n\nconst PasswordInput = withStyles(styles)(({\n  id,\n  classes,\n  handleChange,\n  value,\n  label,\n  className,\n  name\n}) => {\n  const _React$useState = React.useState({\n    showPassword: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const handleClickShowPassword = () => {\n    setValues({\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return React.createElement(FormControl, {\n    className: classNames(classes.textField, className),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, label), React.createElement(Input, {\n    id: id,\n    autoComplete: id,\n    type: values.showPassword ? 'text' : 'password',\n    name: name,\n    value: value,\n    onChange: handleChange,\n    startAdornment: React.createElement(InputAdornment, {\n      position: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Https, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })),\n    endAdornment: React.createElement(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, values.showPassword ? React.createElement(Visibility, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }) : React.createElement(VisibilityOff, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n});\nexport default PasswordInput;","map":{"version":3,"sources":["/Users/tweecezor/Desktop/nodeJS/src/components/common/PasswordInput.jsx"],"names":["React","FormControl","Input","InputLabel","InputAdornment","IconButton","Visibility","VisibilityOff","Https","withStyles","classNames","styles","theme","textField","display","marginBottom","spacing","PasswordInput","id","classes","handleChange","value","label","className","name","useState","showPassword","values","setValues","handleClickShowPassword","handleMouseDownPassword","event","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,KAFF,EAGEC,UAHF,EAIEC,cAJF,EAKEC,UALF,QAMO,mBANP;AAOA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,KAApC,QAAiD,oBAAjD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AACA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,GADA;AAETC,IAAAA,YAAY,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFL;AADY,CAAL,CAApB;;AAOA,MAAMC,aAAa,GAAGR,UAAU,CAACE,MAAD,CAAV,CACpB,CAAC;AAAEO,EAAAA,EAAF;AAAMC,EAAAA,OAAN;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA,KAApC;AAA2CC,EAAAA,SAA3C;AAAsDC,EAAAA;AAAtD,CAAD,KAAkE;AAAA,0BACpCxB,KAAK,CAACyB,QAAN,CAAe;AACzCC,IAAAA,YAAY,EAAE;AAD2B,GAAf,CADoC;AAAA;AAAA,QACzDC,MADyD;AAAA,QACjDC,SADiD;;AAIhE,QAAMC,uBAAuB,GAAG,MAAM;AACpCD,IAAAA,SAAS,CAAC;AAAEF,MAAAA,YAAY,EAAE,CAACC,MAAM,CAACD;AAAxB,KAAD,CAAT;AACD,GAFD;;AAIA,QAAMI,uBAAuB,GAAGC,KAAK,IAAI;AACvCA,IAAAA,KAAK,CAACC,cAAN;AACD,GAFD;;AAIA,SACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAEtB,UAAU,CAACS,OAAO,CAACN,SAAT,EAAoBU,SAApB,CADvB;AAEE,IAAA,QAAQ,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BI,KAA1B,CAJF,EAKE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAEJ,EADN;AAEE,IAAA,YAAY,EAAEA,EAFhB;AAGE,IAAA,IAAI,EAAES,MAAM,CAACD,YAAP,GAAsB,MAAtB,GAA+B,UAHvC;AAIE,IAAA,IAAI,EAAEF,IAJR;AAKE,IAAA,KAAK,EAAEH,KALT;AAME,IAAA,QAAQ,EAAED,YANZ;AAOE,IAAA,cAAc,EACZ,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARJ;AAYE,IAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,oBAAW,4BADb;AAEE,MAAA,OAAO,EAAES,uBAFX;AAGE,MAAA,WAAW,EAAEC,uBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGH,MAAM,CAACD,YAAP,GAAsB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAAuC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL1C,CADF,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAgCD,CA7CmB,CAAtB;AAgDA,eAAeT,aAAf","sourcesContent":["import React from 'react';\nimport {\n  FormControl,\n  Input,\n  InputLabel,\n  InputAdornment,\n  IconButton\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff, Https } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nconst styles = theme => ({\n  textField: {\n    display: 200,\n    marginBottom: theme.spacing(3)\n  }\n});\n\nconst PasswordInput = withStyles(styles)(\n  ({ id, classes, handleChange, value, label, className, name }) => {\n    const [values, setValues] = React.useState({\n      showPassword: false\n    });\n    const handleClickShowPassword = () => {\n      setValues({ showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = event => {\n      event.preventDefault();\n    };\n\n    return (\n      <FormControl\n        className={classNames(classes.textField, className)}\n        required\n      >\n        <InputLabel htmlFor={id}>{label}</InputLabel>\n        <Input\n          id={id}\n          autoComplete={id}\n          type={values.showPassword ? 'text' : 'password'}\n          name={name}\n          value={value}\n          onChange={handleChange}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Https />\n            </InputAdornment>\n          }\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    );\n  }\n);\n\nexport default PasswordInput;\n"]},"metadata":{},"sourceType":"module"}