{"ast":null,"code":"import _defineProperty from \"/Users/tweecezor/Desktop/nodeJS/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/tweecezor/Desktop/nodeJS/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tweecezor/Desktop/nodeJS/src/components/Auth/RegistrationForm.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Typography, Paper, Button } from '@material-ui/core';\nimport AuthFormInput from '../common/AuthFormInput';\nimport PasswordInput from '../common/PasswordInput';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { registerUser } from '../../store/auth';\nimport routes from '../../constants/routes';\n\nconst styles = () => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '20px 40px',\n    maxWidth: '300px'\n  },\n  textCenter: {\n    textAlign: 'center'\n  }\n});\n\nconst RegistrationForm = ({\n  classes,\n  dispatch,\n  history\n}) => {\n  const _useState = useState({\n    username: '',\n    password: '',\n    repeatPassword: '',\n    firstname: '',\n    lastname: '',\n    patronicname: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const username = values.username,\n          password = values.password,\n          firstname = values.firstname,\n          lastname = values.lastname,\n          patronicname = values.patronicname;\n    dispatch(registerUser({\n      username,\n      password,\n      firstname,\n      lastname,\n      patronicname\n    })).then(() => history.push(routes.home)).catch(console.error);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Paper, {\n    className: classes.form,\n    component: \"form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(AuthFormInput, {\n    id: \"username\",\n    handleChange: handleChange('username'),\n    value: values.username,\n    label: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(AuthFormInput, {\n    id: \"lastname\",\n    handleChange: handleChange('lastname'),\n    value: values.lastname,\n    label: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(AuthFormInput, {\n    id: \"firstname\",\n    handleChange: handleChange('firstname'),\n    value: values.firstname,\n    label: \"\\u0418\\u043C\\u044F\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(AuthFormInput, {\n    id: \"patronicname\",\n    handleChange: handleChange('patronicname'),\n    value: values.patronicname,\n    label: \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(PasswordInput, {\n    id: \"password\",\n    handleChange: handleChange('password'),\n    value: values.password,\n    label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(PasswordInput, {\n    id: \"repeatPassword\",\n    handleChange: handleChange('repeatPassword'),\n    value: values.repeatPassword,\n    label: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\")), React.createElement(Typography, {\n    className: classNames(classes.textCenter, classes.form),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B? \", React.createElement(Link, {\n    to: routes.home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")));\n};\n\nexport default compose(withStyles(styles), connect(), withRouter)(RegistrationForm);","map":{"version":3,"sources":["/Users/tweecezor/Desktop/nodeJS/src/components/Auth/RegistrationForm.jsx"],"names":["React","useState","Link","withRouter","connect","Typography","Paper","Button","AuthFormInput","PasswordInput","withStyles","classNames","compose","registerUser","routes","styles","form","display","flexDirection","padding","maxWidth","textCenter","textAlign","RegistrationForm","classes","dispatch","history","username","password","repeatPassword","firstname","lastname","patronicname","values","setValues","handleChange","name","event","target","value","handleSubmit","preventDefault","then","push","home","catch","console","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Typography, Paper, Button } from '@material-ui/core';\nimport AuthFormInput from '../common/AuthFormInput';\nimport PasswordInput from '../common/PasswordInput';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { registerUser } from '../../store/auth';\nimport routes from '../../constants/routes'\nconst styles = () => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '20px 40px',\n    maxWidth: '300px'\n  },\n  textCenter: {\n    textAlign: 'center'\n  }\n});\n\nconst RegistrationForm = ({ classes, dispatch, history }) => {\n  const [values, setValues] = useState({\n    username: '',\n    password: '',\n    repeatPassword: '',\n    firstname: '',\n    lastname: '',\n    patronicname: ''\n  });\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { username, password, firstname, lastname, patronicname } = values;\n    dispatch(\n      registerUser({ username, password, firstname, lastname, patronicname })\n    )\n      .then(() => history.push(routes.home))\n      .catch(console.error);\n  };\n  return (\n    <>\n      <Paper className={classes.form} component=\"form\" onSubmit={handleSubmit}>\n        <AuthFormInput\n          id=\"username\"\n          handleChange={handleChange('username')}\n          value={values.username}\n          label=\"Имя пользователя\"\n          required\n        />\n        <AuthFormInput\n          id=\"lastname\"\n          handleChange={handleChange('lastname')}\n          value={values.lastname}\n          label=\"Фамилия\"\n        />\n        <AuthFormInput\n          id=\"firstname\"\n          handleChange={handleChange('firstname')}\n          value={values.firstname}\n          label=\"Имя\"\n        />\n        <AuthFormInput\n          id=\"patronicname\"\n          handleChange={handleChange('patronicname')}\n          value={values.patronicname}\n          label=\"Отчество\"\n        />\n        <PasswordInput\n          id=\"password\"\n          handleChange={handleChange('password')}\n          value={values.password}\n          label=\"Пароль\"\n        />\n        <PasswordInput\n          id=\"repeatPassword\"\n          handleChange={handleChange('repeatPassword')}\n          value={values.repeatPassword}\n          label=\"Повторить пароль\"\n        />\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n          Зарегистрироваться\n        </Button>\n      </Paper>\n      <Typography className={classNames(classes.textCenter, classes.form)}>\n        Уже зарегистрированы? <Link to={routes.home}>Войти</Link>\n      </Typography>\n    </>\n  );\n};\n\nexport default compose(\n  withStyles(styles),\n  connect(),\n  withRouter\n)(RegistrationForm);\n"]},"metadata":{},"sourceType":"module"}