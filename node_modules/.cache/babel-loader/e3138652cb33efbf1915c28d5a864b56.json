{"ast":null,"code":"import { createActions, handleActions } from 'redux-actions';\n\nconst _createActions = createActions({\n  OPEN_NOTIFICATION: n => n,\n  CLOSE_NOTIFICATION: n => n\n}, {\n  prefix: 'notifications'\n}),\n      openNotification = _createActions.openNotification,\n      closeNotification = _createActions.closeNotification;\n\nexport { openNotification, closeNotification };\nexport const notificationsSelector = state => state.notifications;\nconst notifications = handleActions({\n  [openNotification]: (state, action) => {\n    const _action$payload = action.payload,\n          text = _action$payload.text,\n          variant = _action$payload.variant;\n    return [...state, {\n      text,\n      variant,\n      id: state.length + 1,\n      isActive: !state.length\n    }];\n  },\n  [closeNotification]: (state, action) => {\n    const withoutDeletedNotification = state.filter(notification => notification.id !== action.payload);\n    return withoutDeletedNotification.length ? withoutDeletedNotification.map((not, i) => {\n      if (i === withoutDeletedNotification.length - 1) {\n        not.isActive = true;\n      }\n\n      return not;\n    }) : withoutDeletedNotification;\n  }\n}, []);\nexport default notifications;","map":{"version":3,"sources":["/Users/tweecezor/Desktop/nodeJS/src/store/notifications/index.js"],"names":["createActions","handleActions","OPEN_NOTIFICATION","n","CLOSE_NOTIFICATION","prefix","openNotification","closeNotification","notificationsSelector","state","notifications","action","payload","text","variant","id","length","isActive","withoutDeletedNotification","filter","notification","map","not","i"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;;uBAEuDD,aAAa,CAClE;AACEE,EAAAA,iBAAiB,EAAEC,CAAC,IAAIA,CAD1B;AAEEC,EAAAA,kBAAkB,EAAED,CAAC,IAAIA;AAF3B,CADkE,EAKlE;AAAEE,EAAAA,MAAM,EAAE;AAAV,CALkE,C;MAArDC,gB,kBAAAA,gB;MAAkBC,iB,kBAAAA,iB;;;AAQjC,OAAO,MAAMC,qBAAqB,GAAGC,KAAK,IAAIA,KAAK,CAACC,aAA7C;AAEP,MAAMA,aAAa,GAAGT,aAAa,CACjC;AACE,GAACK,gBAAD,GAAoB,CAACG,KAAD,EAAQE,MAAR,KAAmB;AAAA,4BACXA,MAAM,CAACC,OADI;AAAA,UAC7BC,IAD6B,mBAC7BA,IAD6B;AAAA,UACvBC,OADuB,mBACvBA,OADuB;AAErC,WAAO,CACL,GAAGL,KADE,EAEL;AAAEI,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,EAAE,EAAEN,KAAK,CAACO,MAAN,GAAe,CAApC;AAAuCC,MAAAA,QAAQ,EAAE,CAACR,KAAK,CAACO;AAAxD,KAFK,CAAP;AAID,GAPH;AAQE,GAACT,iBAAD,GAAqB,CAACE,KAAD,EAAQE,MAAR,KAAmB;AACtC,UAAMO,0BAA0B,GAAGT,KAAK,CAACU,MAAN,CACjCC,YAAY,IAAIA,YAAY,CAACL,EAAb,KAAoBJ,MAAM,CAACC,OADV,CAAnC;AAGA,WAAOM,0BAA0B,CAACF,MAA3B,GACHE,0BAA0B,CAACG,GAA3B,CAA+B,CAACC,GAAD,EAAMC,CAAN,KAAY;AACzC,UAAIA,CAAC,KAAKL,0BAA0B,CAACF,MAA3B,GAAoC,CAA9C,EAAiD;AAC/CM,QAAAA,GAAG,CAACL,QAAJ,GAAe,IAAf;AACD;;AACD,aAAOK,GAAP;AACD,KALD,CADG,GAOHJ,0BAPJ;AAQD;AApBH,CADiC,EAuBjC,EAvBiC,CAAnC;AA0BA,eAAeR,aAAf","sourcesContent":["import { createActions, handleActions } from 'redux-actions';\n\nexport const { openNotification, closeNotification } = createActions(\n  {\n    OPEN_NOTIFICATION: n => n,\n    CLOSE_NOTIFICATION: n => n\n  },\n  { prefix: 'notifications' }\n);\n\nexport const notificationsSelector = state => state.notifications;\n\nconst notifications = handleActions(\n  {\n    [openNotification]: (state, action) => {\n      const { text, variant } = action.payload;\n      return [\n        ...state,\n        { text, variant, id: state.length + 1, isActive: !state.length }\n      ];\n    },\n    [closeNotification]: (state, action) => {\n      const withoutDeletedNotification = state.filter(\n        notification => notification.id !== action.payload\n      );\n      return withoutDeletedNotification.length\n        ? withoutDeletedNotification.map((not, i) => {\n            if (i === withoutDeletedNotification.length - 1) {\n              not.isActive = true;\n            }\n            return not;\n          })\n        : withoutDeletedNotification;\n    }\n  },\n  []\n);\n\nexport default notifications;\n"]},"metadata":{},"sourceType":"module"}